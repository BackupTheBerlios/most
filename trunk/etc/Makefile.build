-include $(MOST_ROOT)/etc/Config
-include $(MOST_ROOT)/etc/Commands

ifeq ($(MOST_CPU),h8300)
TARGET_CCFLAGS := -mh
TARGET_DEFINES := -DMOST_TARGET_H8300
TARGET_LDFLAGS := -m h8300h
else
ifeq ($(MOST_CPU),i386)
TARGET_CCFLAGS :=
TARGET_DEFINES := -DMOST_TARGET_I386
TARGET_LDFLAGS := 
else
ifeq ($(MOST_CPU),arm)
TARGET_CCFLAGS := -g -mcpu=arm7tdmi 
TARGET_DEFINES := -DMOST_TARGET_ARM 
TARGET_LDFLAGS := 
else
$(error No target defined!)
endif 
endif
endif

EXECPREF 	:= $(MOST_ROOT)/gcc/$(MOST_GCC)/bin/$(MOST_TARGET)-

CC			:= $(EXECPREF)gcc
LD			:= $(EXECPREF)ld
AR			:= $(EXECPREF)ar
AS			:= $(EXECPREF)as
STRIP		:= $(EXECPREF)strip
OBJCOPY		:= $(EXECPREF)objcopy
OBJDUMP 	:= $(EXECPREF)objdump

INC_PATH 	:= -I$(MOST_ROOT)/sys/inc $(INC_PATH_OPT)

CCFLAGS 	:=  -O0 $(TARGET_CCFLAGS) -fno-builtin -std=iso9899:199x -Wall -pedantic -Werror 

DEFINES 	:= $(TARGET_DEFINES) $(DEFINES_OPT)

LIB_PATH 	:=$ -L$(LIB_PATH_OPT)\
	     	    -L$(MOST_ROOT)/usr/lib/$(MOST_TARGET)\
	            -L$(MOST_ROOT)/sys/lib/$(MOST_TARGET)\
	            -L$(MOST_ROOT)/gcc/$(MOST_GCC)/lib/gcc-lib/$(MOST_TARGET)

LDFLAGS		:= --sort-common --warn-common $(TARGET_LDFLAGS) -T$(PROG_NAME).ld $(LDFLAGS_OPT)\
			   --cref -Map $(PROG_NAME).map

SOURCES  		:= $(wildcard src/*.c)
OBJECTS  		:= $(subst src,o/$(MOST_TARGET),$(subst .c,.o,$(SOURCES)))
ASMFILES 		:= $(subst src,s/$(MOST_CPU),$(subst .c,.s,$(SOURCES)))
SUBMAKES 		:= $(subst src,d/$(MOST_TARGET),$(subst .c,.d,$(SOURCES)))
ASM_SOURCES 	:= $(wildcard src/$(MOST_CPU)/*.S)
ASM_OBJECTS 	:= $(subst src/$(MOST_CPU),o/$(MOST_TARGET),$(subst .S,.o,$(ASM_SOURCES)))

BUILD_ERR 	:= build.err

.PHONY : default help init asm obj lib prog bin srec hex info clean date

default:
	@$(ECHO) "Please use <make help> for more information."

help :
	@$(ECHO) ""
	@$(ECHO) "---------------------- Makefile.build -------------------------------------------------------"
	@$(ECHO) "help"
	@$(ECHO) "asm		: src/*.c -> s/CPU/*.s, d/TARGET/*.d"
	@$(ECHO) "obj		: src/*.c -> o/TARGET/*.o, d/TARGET/*.d" 
	@$(ECHO) "          	: src/CPU/*.S -> o/TARGET/*.o, d/TARGET/*.d" 
	@$(ECHO) "lib		: OBJECT_NAMES -> ../../lib/TARGET/lib_NAME.a"
	@$(ECHO) "prog		: OBJECT_NAMES, LIB_NAMES -> PROG_NAME.(map, unstripped, SYSTEM)"
	@$(ECHO) "bin      	: PROG_NAME.SYSTEM -> PROG_NAME.(code, data, bin)"
	@$(ECHO) "srec	        : PROG_NAME.SYSTEM -> PROG_NAME.srec"
	@$(ECHO) "hex      	: PROG_NAME.SYSTEM -> PROG_NAME.hex"
	@$(ECHO) "info      	: objectdump PROG_NAME.SYSTEM, unstripped"
	@$(ECHO) "---------------------------------------------------------------------------------------------"
	@$(ECHO) ""

clean:
	-$(REMOVE) $(BUILD_ERR) 

date:
	-$(DATE) >$(BUILD_ERR)

asm : date s/$(MOST_CPU) d/$(MOST_TARGET) $(ASMFILES)
	@$(WC) $(BUILD_ERR)

obj : date o/$(MOST_TARGET) d/$(MOST_TARGET) $(OBJECTS) $(ASM_OBJECTS)
	@$(WC) $(BUILD_ERR)

lib : date ../../lib/$(MOST_TARGET)
	@$(ECHO) "archive $(LIB_NAME)"
	@$(AR) cr ../../lib/$(MOST_TARGET)/lib_$(LIB_NAME).a $(OBJ_NAMES) 2>>$(BUILD_ERR)
	@$(WC) $(BUILD_ERR)

prog :
	@$(ECHO) "link $(PROG_NAME)"
	@$(LD) $(LDFLAGS) $(OBJ_NAMES) $(LIB_PATH) $(LIB_NAMES) -o $(PROG_NAME).unstripped
	@$(STRIP) --target=$(MOST_SYSTEM)$(MOST_BIT)-$(MOST_ENDIAN)$(MOST_CPU) $(STRIP_SECTIONS)\
	 -o $(PROG_NAME).$(MOST_SYSTEM) $(PROG_NAME).unstripped

bin :
	@$(ECHO) "generate $(PROG_NAME).bin"
	@$(OBJCOPY) -O binary -j .text -j .rodata $(PROG_NAME).$(MOST_SYSTEM) $(PROG_NAME).code
	@$(OBJCOPY) -O binary -j .data $(PROG_NAME).$(MOST_SYSTEM) $(PROG_NAME).data
	@cat $(PROG_NAME).code $(PROG_NAME).data > $(PROG_NAME).bin

srec :
	@$(ECHO) "generate $(PROG_NAME).srec"
	@$(OBJCOPY) -O srec $(PROG_NAME).$(MOST_SYSTEM) $(PROG_NAME).srec

hex:
	@$(ECHO) "generate $(PROG_NAME).hex"
	@$(OBJCOPY) -O ihex $(PROG_NAME).$(MOST_SYSTEM) $(PROG_NAME).hex

info :
	@$(OBJDUMP) -h $(PROG_NAME).$(MOST_SYSTEM)
	@$(OBJDUMP) -h $(PROG_NAME).unstripped


o/$(MOST_TARGET)/%.o: src/%.c
	@$(ECHO) "compile $<"
	@$(CC) -c $(CCFLAGS) $(INC_PATH) $(DEFINES) -MP -MMD -MF "d/$(MOST_TARGET)/$(patsubst %.c,%.d,$(<F))" $< -o $@ 2>>$(BUILD_ERR)

o/$(MOST_TARGET)/%.o: src/$(MOST_CPU)/%.S
	@$(ECHO) "compile $<"
	@$(CC) -c $(CCFLAGS) $(INC_PATH) $(DEFINES) -D__ASSEMBLY__ -MP -MMD -MF "d/$(MOST_TARGET)/$(patsubst %.s,%.d,$(<F))" $< -o $@ 2>>$(BUILD_ERR)

s/$(MOST_CPU)/%.s : src/%.c
	@$(ECHO) "compile $<"
	@$(CC) -S $(CCFLAGS) $(INC_PATH) $(DEFINES) -MP -MMD -MF "d/$(MOST_TARGET)/$(patsubst %.c,%.d,$(<F))" $< -o $@ 2>>$(BUILD_ERR)

s/$(MOST_CPU) : s
	@$(MAKEDIR) s/$(MOST_CPU)

s :
	@$(MAKEDIR) s

o/$(MOST_TARGET) : o
	@$(MAKEDIR) o/$(MOST_TARGET)

o :
	@$(MAKEDIR) o

d/$(MOST_TARGET) : d
	@$(MAKEDIR) d/$(MOST_TARGET)

d :
	@$(MAKEDIR) d

../../lib/$(MOST_TARGET) : ../../lib
	@$(MAKEDIR) ../../lib/$(MOST_TARGET)

../../lib :
	@$(MAKEDIR) ../../lib

-include $(SUBMAKES)	
